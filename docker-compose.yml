version: '3.8'

services:
  app:
    build:
      context: .
      args:
        - APP_ENV
    command: npm run start:dev
    ports:
      - 3000:3000
    volumes:
      - ./:/usr/src/app:cached
      - node_modules:/usr/src/app/node_modules
    environment:
      APP_ENV: ${APP_ENV}
      APP_PORT: ${APP_PORT}
      DB_HOST: pgsqldb
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      JWT_ACCESS_TOKEN_EXP_IN_SEC: ${JWT_ACCESS_TOKEN_EXP_IN_SEC}
      JWT_REFRESH_TOKEN_EXP_IN_SEC: ${JWT_REFRESH_TOKEN_EXP_IN_SEC}
      JWT_PUBLIC_KEY_BASE64: ${JWT_PUBLIC_KEY_BASE64}
      JWT_PRIVATE_KEY_BASE64: ${JWT_PRIVATE_KEY_BASE64}
      DEFAULT_ADMIN_USER_PASSWORD: ${DEFAULT_ADMIN_USER_PASSWORD}
    depends_on:
      - postgres

  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-jewelry_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-Admin@123}
      - POSTGRES_DB=${POSTGRES_DB:-jewelry_db}
    ports:
      - 5435:5432
    volumes:
      - postgres_data:/var/lib/postgresql/jewelry/data
    restart: always
  adminer:
    image: dpage/pgadmin4:2024-10-14-1
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL:-admin@gmail.com}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD:-Admin@123}
    ports:
      - 5050:80
    depends_on:
      - postgres

volumes:
  node_modules:
  postgres_data:
